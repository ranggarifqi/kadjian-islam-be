// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  IKHWAN
  AKHWAT
}

enum CreateOrganisationStatus {
  APPROVED
  REJECTED
  PENDING
}

model AccessLevel {
  name       String       @id()
  Credential Credential[]
}

model Credential {
  id          String    @id @default(uuid()) @db.Uuid
  email       String    @unique
  password    String
  verifyToken String?
  verifiedAt  DateTime?
  User        User?
  accessLevel String    @default("User")

  AccessLevel AccessLevel @relation(fields: [accessLevel], references: [name])
}

model User {
  id           String   @id @default(uuid()) @db.Uuid
  firstName    String
  lastName     String
  gender       Gender?  @default(IKHWAN)
  provinceId   String?
  districtId   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  credentialId String   @unique @db.Uuid

  credential Credential @relation(fields: [credentialId], references: [id])
  District   District?  @relation(fields: [districtId], references: [id])
  Province   Province?  @relation(fields: [provinceId], references: [id])

  CreateOrganisationRequesters CreateOrganisationRequest[] @relation("CreateOrgRequest_Creator")
  CreateOrganisationHandlers   CreateOrganisationRequest[] @relation("CreateOrgRequest_Handler")

  @@index([provinceId])
  @@index([districtId])
  @@index([credentialId])
}

model District {
  id         String @id
  provinceId String
  name       String

  Province                  Province                    @relation(fields: [provinceId], references: [id])
  User                      User[]
  CreateOrganisationRequest CreateOrganisationRequest[]
  Organisation              Organisation[]

  @@index([provinceId])
}

model Province {
  id   String @id
  name String

  districts                 District[]
  User                      User[]
  CreateOrganisationRequest CreateOrganisationRequest[]
  Organisation              Organisation[]
}

model CreateOrganisationRequest {
  id              String                   @id @default(uuid()) @db.Uuid
  name            String                   @db.VarChar(255)
  description     String
  address         String
  email           String?                  @db.VarChar(255)
  mobileNumber    String                   @db.VarChar(50)
  countryCode     String                   @db.VarChar(10)
  provinceId      String
  districtId      String
  size            Int
  logo            String?                  @db.VarChar(255)
  createdAt       DateTime                 @default(now()) @db.Timestamptz()
  createdBy       String                   @db.Uuid
  updatedAt       DateTime                 @updatedAt @db.Timestamptz()
  status          CreateOrganisationStatus @default(PENDING)
  handledAt       DateTime?                @db.Timestamptz()
  handledBy       String?                  @db.Uuid
  rejectionReason String?

  Province Province @relation(fields: [provinceId], references: [id])
  District District @relation(fields: [districtId], references: [id])
  Creator  User     @relation(name: "CreateOrgRequest_Creator", fields: [createdBy], references: [id])
  Handler  User?    @relation(name: "CreateOrgRequest_Handler", fields: [handledBy], references: [id])

  @@index([provinceId])
  @@index([districtId])
  @@index([createdBy])
  @@index([handledBy])
}

model Organisation {
  id           String   @id @default(uuid()) @db.Uuid
  name         String   @db.VarChar(255)
  description  String
  address      String
  email        String?  @db.VarChar(255)
  mobileNumber String   @db.VarChar(50)
  countryCode  String   @db.VarChar(10)
  provinceId   String
  districtId   String
  size         Int
  logo         String?  @db.VarChar(255)
  createdAt    DateTime @default(now()) @db.Timestamptz()
  createdBy    String   @db.Uuid
  updatedAt    DateTime @updatedAt @db.Timestamptz()
  updatedBy    String?  @db.Uuid
  requestId    String?  @db.Uuid

  Province Province @relation(fields: [provinceId], references: [id])
  District District @relation(fields: [districtId], references: [id])

  @@index([provinceId])
  @@index([districtId])
  @@index([createdBy])
  @@index([updatedBy])
}

model OrgUserRole {
  name    String    @id()
  OrgUser OrgUser[]
}

model OrgUser {
  id             String  @id @default(uuid()) @db.Uuid
  userid         String  @db.Uuid
  organisationId String  @db.Uuid
  orgUserRole    String  @default("Admin")
  isSelected     Boolean @default(false)

  OrgUserRole OrgUserRole @relation(fields: [orgUserRole], references: [name])
}
